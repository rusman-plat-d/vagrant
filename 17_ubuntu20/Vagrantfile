# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "generic/ubuntu2004"
  config.vm.hostname = "ubuntu20n17"
  # config.vm.base_address = "192.168.56.8"

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 5608, host_ip: "127.0.0.1"
  # config.vm.network "forwarded_port", guest: 80, host: 5608

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.56.17"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"
  # config.vm.network "public_network", use_dhcp_assigned_default_route: true
  config.vm.network "public_network", ip: "192.168.0.17", bridge: "wlo1"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Disable the default share of the current code directory. Doing this
  # provides improved isolation between the vagrant box and your host
  # by making sure your Vagrantfile isn't accessible to the vagrant box.
  # If you use this you may want to enable additional shared subfolders as
  # shown above.
  # config.vm.synced_folder ".", "/vagrant", disabled: true

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.name = "ubuntu20n17"
    vb.memory = 10240
    vb.cpus = 8
    # Display the VirtualBox GUI when booting the machine
    # vb.gui = true
  
    # Customize the amount of memory on the VM:
    # vb.memory = "1024"
  end

  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    sudo apt update -y
    sudo apt upgrade -y
    sudo add-apt-repository -y ppa:ondrej/php
    sudo apt update
    sudo apt install -y btop firewall-config htop nano neofetch nginx software-properties-common
    sudo apt remove apache2
    sudo systemctl enable nginx
    sudo systemctl restart nginx
    sudo firewall-cmd --add-service http

    
    sudo apt upgrade -y
    sudo apt install -y php8.3 php8.3-cli php8.3-common php8.3-fpm php8.3-mysql php8.3-pdo php8.3-mbstring php8.3-gd php8.3-imagick php8.3-bcmath php8.3-curl php8.3-dev php8.3-intl php8.3-ldap php8.3-pgsql php8.3-redis php8.3-uploadprogress php8.3-xdebug php8.3-zip php8.3-dom php8.3-odbc
    sudo update-alternatives --set php /usr/bin/php8.3
    
    php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
    sudo php composer-setup.php --install-dir=/usr/bin --filename=composer --2
    sudo php composer-setup.php --install-dir=/usr/bin --filename=composer2 --2
    sudo php composer-setup.php --install-dir=/usr/bin --filename=composer1 --1

    sudo add-apt-repository -y ppa:git-core/ppa
    sudo apt update
    sudo apt install -y git

    sudo chmod 775 -R /var/www/html && sudo chown vagrant:www-data -R /var/www/html
    mkdir -p /var/www/html/adminer && cd /var/www/html/adminer && wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1.php && mv adminer-4.8.1.php index.php
  SHELL
end
